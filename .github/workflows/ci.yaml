name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          components: clippy, rustfmt

      - name: Cache cargo registry
        uses: actions/cache@v3
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}

      - name: Cache cargo build artifacts
        uses: actions/cache@v3
        with:
          path: target
          key: ${{ runner.os }}-cargo-build-${{ hashFiles('**/Cargo.lock') }}

      - name: Cache Cargo bin (including cargo-make)
        uses: actions/cache@v3
        with:
          path: ~/.cargo/bin
          key: cargo-bin-${{ runner.os }}-cargo-make-0.36.7

      - name: Install cargo-make if not already installed
        run: |
          if ! command -v cargo-make > /dev/null; then
            echo "Installing cargo-make..."
            cargo install cargo-make --version 0.36.7
          else
            echo "cargo-make is already installed."
          fi

      - name: Run formatting check
        run: cargo make fmt-check

      - name: Run clippy check
        run: cargo make clippy-check

  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        project: ["cli-utils", "cli-forgo"]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          components: clippy, rustfmt

      - name: Cache cargo registry
        uses: actions/cache@v3
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}

      - name: Cache cargo build artifacts
        uses: actions/cache@v3
        with:
          path: target
          key: ${{ runner.os }}-cargo-build-${{ hashFiles('**/Cargo.lock') }}

      - name: Cache Cargo bin (including cargo-make)
        uses: actions/cache@v3
        with:
          path: ~/.cargo/bin
          key: cargo-bin-${{ runner.os }}-cargo-make-0.36.7

      - name: Install cargo-make if not already installed
        run: |
          if ! command -v cargo-make > /dev/null; then
            echo "Installing cargo-make..."
            cargo install cargo-make --version 0.36.7
          else
            echo "cargo-make is already installed."
          fi

      - name: Run tests for ${{ matrix.project }}
        env:
          PROJECT: ${{ matrix.project }}
        run: cargo make test-project
